name: Primary checks

permissions:
  contents: read
  checks: write

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    timeout-minutes: 10
    strategy:
      max-parallel: 5
      matrix:
        python_version: ["3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-24.04, ubuntu-22.04, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup python ${{ matrix.python_version }} and env
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
          cache: 'pip' # caching pip dependencies

      - name: Create virtual env
        run: |
          python -m venv .venv

      - name: Install package with dependencies
        run: |
          source .venv/bin/activate
          pip install -e '.[dev]'
          mkdir -p junit

      - name: Mypy
        run: |
          source .venv/bin/activate
          mypy --strict gpuq tests --junit-xml=junit/mypy-results.xml

      - name: Tests
        run: |
          source .venv/bin/activate
          pytest tests/ --junitxml=junit/test-results.xml

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/junit/*.xml'

      - name: Build package
        if: github.event_name == 'push' && github.ref == 'main'
        run: |
          source .venv/bin/activate
          pip install build
          python -m build

      - name: Upload wheel
        if: github.event_name == 'push' && github.ref == 'main'
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
